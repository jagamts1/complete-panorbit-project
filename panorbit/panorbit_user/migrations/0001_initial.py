# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-07 03:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PanorbitUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=25, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=25, verbose_name='Last Name')),
                ('father_name', models.CharField(blank=True, max_length=25, verbose_name="Father's Name")),
                ('email', models.EmailField(blank=True, max_length=254, primary_key=True, serialize=False, unique=True, verbose_name='Email Id')),
                ('phonenumber', models.CharField(blank=True, max_length=25, verbose_name='Phone Number')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], default='gender', max_length=6)),
                ('spouse_name', models.CharField(blank=True, max_length=25, verbose_name='Spouse Name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
